<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.project.mapper.PlaceMapper">
    <select id="findByRouteId" resultType="com.example.project.entity.Route">
        select * from route where id= #{id}
    </select>
    <insert id ="savePlace" parameterType="com.example.project.entity.Place" useGeneratedKeys="true" keyProperty="id">
        insert into place(title,link,address,roadAddress,mapx,mapy,category,route_id)
        values(#{title},
               #{link},
               #{address},
               #{roadAddress},
               #{mapx},
               #{mapy},
               #{category},
               #{route.id})
    </insert>
    <insert id = "addRoute" parameterType="com.example.project.entity.Route" useGeneratedKeys="true" keyProperty="id">
        insert into route(title, created_at,owner_id)
        values(#{title},#{created_at},#{owner.id})
    </insert>
    <insert id="addRouteUser">
        insert into route_user(route_id, user_id)
        values(#{route.id}, #{users.id})
    </insert>
    <delete id="deleteRouteUser">
        delete from route_user where user_id=#{users.id} and route_id=#{route.id}
    </delete>
    <select id ="findMaxOrderByRouteDay" parameterType="map" resultType="int">
        select coalesce(max("order"), 0 )
        from route_item
        where route_id = #{routeId}
        and day=#{day}
    </select>
    <insert id="saveRouteItem" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.example.project.entity.RouteItem" >
        insert into route_item(route_id, day, "order")
        values (#{route.id}, #{day}, #{order})
    </insert>
    <insert id="savePlaceItem" parameterType="com.example.project.entity.PlaceItem">
        insert into place_item(id, place_id)
        values (#{id}, #{place.id})
    </insert>
    <insert id="saveMemo" parameterType="com.example.project.entity.Memo" useGeneratedKeys="true" keyProperty="id">
        insert into memo(content,route_id)
        values (#{content}, #{route.id})
    </insert>
    <update id="editMemo" parameterType="com.example.project.entity.Memo">
        update memo set content=#{content} where id = #{id}
    </update>
    <insert id="saveMemoItem" parameterType="com.example.project.entity.MemoItem" >
        --saveRouteItem에서 memo_item.id 생성됨
        insert into memo_item(id, memo_id)
        values (#{id}, #{memo.id})
    </insert>
    <delete id="deleteRouteItem">
    delete from route_item where id= #{id}
    </delete>
    <delete id="deleteMemoItem" parameterType="com.example.project.entity.MemoItem">
        delete from memo_item where id= #{id}
    </delete>
    <delete id="deletePlaceItem" parameterType="com.example.project.entity.PlaceItem">
        delete from place_item where id= #{id}
    </delete>
    <select id ="findByMemoId" resultType="com.example.project.entity.Memo">
        select * from memo where id = #{id}
    </select>
    <select id ="findByMemoItemId" resultType="com.example.project.entity.MemoItem">
        select * from memo_item where id = #{id}
    </select>
    <select id ="findByPlaceItemId" resultType="com.example.project.entity.PlaceItem">
        select * from place_item where id = #{id}
    </select>
    <delete id="deleteRoute" parameterType="com.example.project.entity.Route">
        delete from route where id=#{id}
    </delete>
    <insert id="saveInvite" parameterType="com.example.project.entity.Invite" useGeneratedKeys="true" keyProperty="id">
        insert into invite(route_id,  token, expired_at)
        values(#{route_id},#{token},#{expired_at})
    </insert>
    <select id="findByToken" resultType="com.example.project.entity.Invite">
        select * from invite where token = #{token}
    </select>
    <select id="findByOwnerIdByRouteId" resultType="Long">
        select owner_id from route where id=#{id}
    </select>
    <select id="findUsersByRouteId" resultType="com.example.project.entity.User">
        select u.* from users u join route_user ru on u.id=ru.user_id where ru.route_id=#{routeId}
    </select>
</mapper>